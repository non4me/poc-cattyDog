<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cmt-fe</artifactId>
        <groupId>cz.csas.cmt</groupId>
        <version>1.11.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>cmt-web-angular</artifactId>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>cmt-web-${project.version}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warSourceDirectory>${basedir}/release</warSourceDirectory>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                    </archive>
                    <packagingExcludes>
                        WEB-INF/classes
                    </packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>cz.csas</groupId>
                <artifactId>nodejs-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>npm-cache-cleanup</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>cache clean</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>nodejs</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare</goal>
                            <goal>npm-install</goal>
                        </goals>
                        <configuration>
                            <cleanBeforeInstall>false</cleanBeforeInstall>
                        </configuration>
                    </execution>
                    <!--
                         Bower cache clean up
                         We need to do clean up of the Bower cache only when a build process
                         fail on TeamCity due to an issue with downloading of a dependency.
                    -->
                    <!-- <execution>
                        <id>bower-cache-cleanup</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bower</executable>
                            <arguments>
                                <argument>cache clean</argument>
                            </arguments>
                        </configuration>
                    </execution> -->
                    <!-- Install bower dependencies -->
                    <!--<execution>
                        <id>bower-install</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bower</executable>
                            <arguments>
                                <argument>update</argument>
                            </arguments>
                            &lt;!&ndash; watchBaseDir defaults to workingDirectory &ndash;&gt;
                            <watchIncludes>
                                <include>bower.json</include>
                            </watchIncludes>
                            &lt;!&ndash; Place marker in bower_components, don't pollute our project sources &ndash;&gt;
                            <markerDirectory>${project.basedir}/bower_components</markerDirectory>
                        </configuration>
                    </execution>-->
                    <!-- Compilation of JS files -->
                    <execution>
                        <id>gulp</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>gulp webpack</executable>
<!--                            <arguments>
                                <argument>&#45;&#45;release</argument>
                            </arguments>-->
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <binaryDirectory>${java.io.tmpdir}/cmt-nodejs-binaries</binaryDirectory>
                    <npmDirectory>${project.basedir}</npmDirectory>
                    <workingDirectory>${project.basedir}</workingDirectory>
                    <environmentVariables>
                        <PHANTOMJS_CDNURL>${npm.phantomjs}</PHANTOMJS_CDNURL>
                    </environmentVariables>
                    <!--Higher version of nodejs isn't available on CS artifactory -->
                    <nodeVersion>4.2.1</nodeVersion>
                    <npmVersion>3.6.0</npmVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>release</directory>
                        </fileset>
                        <fileset>
                            <directory>build</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
